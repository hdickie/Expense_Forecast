# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: ALL - UNIT - Coverage

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        coverage run --data-file=./unit_test_coverage.dat -m pytest -k unit_test
    - name: Write coverage results to .json
      run: |
        coverage json --data-file=unit_test_coverage.dat -o unit_tests_coverage.json
    - name: "Combine"
      run: |
        export TOTAL=$(python -c "import json;print(json.load(open('unit_tests_coverage.json'))['totals']['percent_covered_display'])")
        echo "total=$TOTAL" >> $GITHUB_ENV
        echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY
    - name: "Make badge"
      uses: schneegans/dynamic-badges-action@v1.4.0
      with:
        # GIST_TOKEN is a GitHub personal access token with scope "gist".
        auth: ${{ secrets.GIST_TOKEN }}
        gistID: 69631cca73647a817c2678cf0250a54a   # replace with your real Gist id.
        filename: unit_tests_coverage.json
        label: Coverage
        message: ${{ env.total }}%
        minColorRange: 50
        maxColorRange: 90
        valColorRange: ${{ env.total }}


